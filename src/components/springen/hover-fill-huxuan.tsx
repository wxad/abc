"use client"

import HoverFill from "./HoverFill"
import Popover from "./Popover"
import React, { useEffect, useRef, useState } from "react"
import DemoBox from "../DemoBox"

const Basics = () => {
  const [visible, setVisible] = useState(false)
  const [hoverIndex, setHoverIndex] = useState<number | null>(null)
  const lastHoverIndex = useRef(hoverIndex)
  const [lastValidHoverIndex, setLastValidHoverIndex] = useState<
    number | undefined
  >(undefined)
  const hoverTimer = useRef(0)
  const popupRef = useRef<HTMLDivElement>(null)

  // demo 我就直接写定尺寸了
  const menus = [
    {
      label: "创作者广场",
      list: [
        {
          label: "视频号",
          icon: (
            <svg className="size-6 mr-3" viewBox="0 0 16 16" fill="none">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M2.60045 2.25C3.29833 2.25 3.90902 2.6364 4.40208 3.0815C4.90994 3.53996 5.40329 4.16132 5.87488 4.83968C6.59123 5.87012 7.32625 7.1371 8.02784 8.33073C8.73537 7.13993 9.46942 5.86659 10.1604 4.84702C10.6183 4.17136 11.0924 3.55173 11.5745 3.09421C12.0361 2.65616 12.6256 2.25 13.31 2.25C14.5482 2.25 14.9262 3.57642 14.9866 4.58262C15.0513 5.65825 14.875 7.03717 14.5814 8.3697C14.2863 9.70926 13.8588 11.0641 13.386 12.1004C13.0184 12.9061 12.409 14.1667 11.3628 14.1667C10.466 14.1667 9.74138 13.4715 9.19771 12.8331C8.80491 12.3719 8.40818 11.8077 8.01372 11.1964C7.60193 11.8137 7.18292 12.3837 6.76224 12.8495C6.1556 13.5213 5.38044 14.1667 4.4781 14.1667C3.4224 14.1667 2.86455 12.8928 2.51764 12.085C2.07319 11.0502 1.67329 9.69725 1.3966 8.36033C1.12111 7.02923 0.955766 5.6566 1.0104 4.58927C1.06004 3.61932 1.37845 2.25 2.60045 2.25ZM7.14315 9.78243C6.29449 8.35803 5.4676 6.88168 4.64325 5.6959C4.19593 5.05244 3.77911 4.53991 3.39696 4.19493C3.06548 3.89569 2.83008 3.78596 2.67969 3.7579C2.67751 3.76224 2.67521 3.76693 2.67278 3.77199C2.59994 3.92382 2.53159 4.21364 2.50844 4.66594C2.4631 5.55173 2.602 6.78327 2.86547 8.05634C3.12774 9.32358 3.50149 10.5748 3.8959 11.4931C4.0613 11.8782 4.25798 12.3557 4.56859 12.6566C4.78666 12.6114 5.14326 12.4042 5.64899 11.8442C6.12283 11.3195 6.62203 10.6053 7.14315 9.78243ZM8.90148 9.79122C9.41038 10.6166 9.89058 11.3332 10.3397 11.8605C10.585 12.1486 10.9071 12.5496 11.2939 12.6557C11.6345 12.3597 11.8394 11.8766 12.0213 11.4778C12.4396 10.5609 12.8379 9.31158 13.1165 8.04697C13.3967 6.77533 13.5421 5.55009 13.4893 4.67259C13.472 4.38457 13.4577 3.99902 13.2826 3.75174C13.1776 3.7642 12.958 3.84923 12.6071 4.18222C12.2426 4.52814 11.84 5.04241 11.4021 5.68856C10.5886 6.88898 9.77244 8.35606 8.90148 9.79122Z"
                fill="#FA9D3B"
              />
            </svg>
          ),
        },
        {
          label: "公众号",
          icon: (
            <svg className="size-6 mr-3" viewBox="0 0 18 18" fill="none">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M13.8814 4.79098C13.1501 3.28732 11.3003 2.0003 9.20591 2C8.10694 1.99971 6.42804 2.37698 5.17344 3.89406C4.33562 4.90711 4.05354 6.09273 4.2301 7.27512C4.35139 8.08744 4.80383 9.15915 5.45124 9.83707C5.6953 8.11854 6.60047 6.76697 7.78728 5.77352C9.93011 4.13649 12.2178 4.22918 13.8814 4.79098ZM15.5532 7.36963C14.2422 5.6682 11.9758 5.19218 9.92999 5.95086L9.9468 5.95592C10.0072 5.9741 10.0675 5.99225 10.1276 6.01261C13.1566 7.04453 14.7937 10.3305 13.7841 13.352C13.5155 14.1558 13.0854 14.8588 12.5437 15.4399C13.1963 15.2592 13.8642 15.0008 14.4372 14.5593C16.744 12.7818 17.1981 9.5042 15.5532 7.36963ZM7.86661 12.6553C8.29547 12.7511 8.74128 12.804 9.20153 12.804C10.6028 12.804 11.7126 12.478 12.7609 11.7068C12.7338 12.143 12.6026 12.6681 12.4827 12.9773C11.496 15.5232 8.63959 16.6267 5.64612 15.6436C3.04319 14.7887 1.44815 11.7365 2.17692 9.18889C2.37234 8.5061 2.57203 8.03774 2.94695 7.44839C3.17184 9.09073 4.19433 10.6881 5.68502 11.7047C5.79835 11.7811 5.87587 11.9085 5.88221 12.0561C5.88427 12.1051 5.87573 12.1511 5.86482 12.1989L5.61458 13.3347C5.61166 13.3482 5.60822 13.3619 5.60474 13.3757C5.59454 13.4162 5.58408 13.4578 5.58584 13.4991C5.59115 13.6218 5.69431 13.7174 5.81648 13.7121C5.86453 13.71 5.90284 13.6903 5.94249 13.6651L7.35699 12.7583C7.46339 12.6901 7.57731 12.6461 7.70435 12.6407C7.76035 12.6382 7.81429 12.6445 7.86661 12.6553Z"
                fill="#07c160"
              />
            </svg>
          ),
        },
        {
          label: "小程序",
          icon: (
            <svg className="size-6 mr-3" viewBox="0 0 18 18" fill="none">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M9.93333 3.56419C8.8145 4.21631 8.06667 5.36894 8.06667 6.68364V12.1497C8.06667 13.1341 7.12633 13.9321 5.96667 13.9321C4.80677 13.9321 3.86667 13.1341 3.86667 12.1497C3.86667 11.4491 4.34407 10.8447 5.03683 10.5534C5.08677 10.5325 5.1374 10.5125 5.18943 10.4949C5.62553 10.3167 5.99957 9.98205 6.1384 9.59348C6.3435 9.01978 5.96177 8.55493 5.28603 8.55493C5.11757 8.55493 4.94677 8.58393 4.78203 8.63621C3.80273 8.92258 2.98723 9.54904 2.4977 10.3673C2.18153 10.8961 2 11.5033 2 12.1497C2 14.1809 3.7794 15.8333 5.96667 15.8333C6.7383 15.8333 7.45673 15.6244 8.06667 15.2691C9.1855 14.617 9.93333 13.4644 9.93333 12.1497V6.68364C9.93333 5.69928 10.8734 4.90123 12.0333 4.90123C13.193 4.90123 14.1333 5.69928 14.1333 6.68364C14.1333 7.41419 13.6156 8.04207 12.8743 8.31728C12.3962 8.48055 12.0044 8.83299 11.8551 9.25055C11.6511 9.82139 12.031 10.2843 12.7037 10.2843C12.8561 10.2843 13.0101 10.2577 13.1601 10.2145C13.1846 10.2076 13.2089 10.2 13.2331 10.1926C14.2043 9.90528 15.0149 9.28073 15.5021 8.46605C15.8185 7.93751 16 7.33006 16 6.68364C16 4.65241 14.2206 3 12.0333 3C11.2617 3 10.5433 3.2089 9.93333 3.56419Z"
                fill="#605AB0"
              />
            </svg>
          ),
        },
        {
          label: "QQ短视频",
          icon: (
            <svg className="size-6 mr-3" viewBox="0 0 32 32" fill="none">
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M24.4631 7.56752C26.7059 9.68039 28.106 12.6778 28.106 16.0022C28.106 22.4011 22.9187 27.5884 16.5198 27.5884C10.1209 27.5884 4.93359 22.4011 4.93359 16.0022C4.93359 9.60334 10.1209 4.41602 16.5198 4.41602C18.6717 4.41602 20.6866 5.00266 22.4132 6.02476C22.5 6.07079 22.5863 6.11856 22.6721 6.16807C23.3484 6.55856 23.9472 7.03176 24.4631 7.56752ZM13.0595 7.28186C9.59205 8.65894 7.14049 12.0443 7.14049 16.0022C7.14049 21.1823 11.3398 25.3815 16.5198 25.3815C21.4188 25.3815 25.4405 21.6256 25.8625 16.8363C25.7929 16.9744 25.719 17.1114 25.6406 17.247C23.401 21.1261 18.4408 22.4552 14.5617 20.2156C10.6826 17.976 9.35351 13.0158 11.5931 9.13666C11.9998 8.43228 12.4962 7.81198 13.0595 7.28186ZM21.3302 7.94873C18.5448 6.50462 15.089 7.49543 13.5043 10.2401C11.8742 13.0637 12.8416 16.6742 15.6652 18.3044C18.4887 19.9346 22.0992 18.9671 23.7294 16.1436C25.0676 13.8257 24.6554 10.9776 22.9029 9.12998C22.4228 8.68378 21.8958 8.28731 21.3302 7.94873Z"
                fill="#0099FF"
              />
            </svg>
          ),
        },
      ],
      width: 145,
      height: 54 * 4,
    },
    {
      label: "管理中心",
      list: [
        {
          label: "互选订单管理",
          icon: null,
        },
        {
          label: "互选结案报告管理",
          icon: null,
        },
      ],
      width: 152,
      height: 54 * 2,
    },
  ]

  const handleMouseEnter = (index: number) => {
    clearTimeout(hoverTimer.current)
    setHoverIndex(index)
    setLastValidHoverIndex(index)
    setVisible(true)
  }

  const handleMouseLeave = () => {
    clearTimeout(hoverTimer.current)

    hoverTimer.current = window.setTimeout(() => {
      setHoverIndex(null)
      setVisible(false)
    }, 200)
  }

  useEffect(() => {
    const interval = setInterval(() => {
      clearTimeout(hoverTimer.current)
      setHoverIndex((index) => (index === 0 ? 1 : 0))
      setLastValidHoverIndex((index) => (index === 0 ? 1 : 0))
      setVisible(true)
    }, 1500)

    return () => {
      clearInterval(interval)
      clearTimeout(hoverTimer.current)
    }
  }, [])

  useEffect(() => {
    if (popupRef.current) {
      popupRef.current.style.transition =
        lastHoverIndex.current === null ? "none" : "all 150ms ease-in-out"
    }

    if (lastHoverIndex.current !== hoverIndex) {
      lastHoverIndex.current = hoverIndex
    }
  }, [hoverIndex])

  return (
    <div>
      <DemoBox className="p-0 h-96 overflow-hidden">
        <div className="flex-1 h-16 bg-white">
          <div className="flex items-center px-6 h-full">
            <svg className="mr-8 h-[30px]" viewBox="0 0 207 32" fill="none">
              <path
                d="M11.1802 28.874L5.55112 23.2449L10.6325 19.2288C11.906 18.2223 13.7294 18.3206 14.8874 19.458C16.0538 20.6036 16.177 22.4413 15.1741 23.7324L11.1802 28.874Z"
                fill="#A1E6C2"
              ></path>
              <path
                d="M26.6437 12.4547C25.3679 13.4852 23.5203 13.3872 22.3607 12.2276C21.2348 11.1017 21.1054 9.32028 22.0567 8.0435L25.4667 3.46693L31.3334 8.66693L26.6437 12.4547Z"
                fill="#A1E6C2"
              ></path>
              <path
                d="M11.2084 3.15234L5.55152 8.8092L10.7196 12.6306C11.997 13.5751 13.77 13.4574 14.9114 12.3523C16.1276 11.1747 16.2357 9.26056 15.1599 7.95345L11.2084 3.15234Z"
                fill="#FAD5AF"
              ></path>
              <path
                d="M26.3728 19.4619C25.0965 18.477 23.2846 18.6053 22.1599 19.7602C21.0698 20.8795 20.9563 22.6255 21.8924 23.8765L25.6769 28.9339L31.3906 23.3339L26.3728 19.4619Z"
                fill="#FAD5AF"
              ></path>
              <path
                d="M8.72608 18.3335C9.99568 18.1394 10.9334 17.0475 10.9334 15.7631C10.9334 14.4932 10.016 13.409 8.76357 13.1988L4.80008 12.5336L4.80008 18.9336L8.72608 18.3335Z"
                fill="#8ED2FF"
              ></path>
              <path
                d="M28.6074 18.3335C27.3378 18.1394 26.4 17.0475 26.4 15.7631C26.4 14.4932 27.3174 13.409 28.5699 13.1988L32.5334 12.5336V18.9336L28.6074 18.3335Z"
                fill="#8ED2FF"
              ></path>
              <circle cx="28.8" cy="5.60059" r="4" fill="#07C160"></circle>
              <circle cx="8.26672" cy="26.1338" r="4" fill="#07C160"></circle>
              <circle cx="8.26672" cy="5.86719" r="4" fill="#FA9D3B"></circle>
              <circle cx="28.8" cy="26.4004" r="4" fill="#FA9D3B"></circle>
              <circle cx="18.6667" cy="15.7342" r="3.2" fill="#296BEF"></circle>
              <circle cx="32.8" cy="15.7342" r="3.2" fill="#296BEF"></circle>
              <circle cx="4.53337" cy="15.7342" r="3.2" fill="#296BEF"></circle>
              <path
                d="M52.1745 7.29102H47.7819V17.1786C47.796 19.9123 47.647 22.6443 47.3356 25.3603H49.1814C49.3006 24.3615 49.5319 22.0535 49.595 18.8261H51.1932V25.3603H53.1395V8.27813C53.1396 8.02033 53.0387 7.77272 52.8583 7.58826C52.678 7.40379 52.4326 7.29711 52.1745 7.29102ZM50.9362 8.86154C50.9997 8.87004 51.0587 8.89903 51.1043 8.9441C51.1498 8.98916 51.1794 9.04785 51.1885 9.11124V12.25H49.6043V8.86154H50.9362ZM49.6067 17.2626V13.8228H51.1885V17.2649L49.6067 17.2626Z"
                fill="#333333"
              ></path>
              <path
                d="M71.5724 11.0642L70.056 6.73535H68.0723L69.5887 11.0642H71.5724Z"
                fill="#333333"
              ></path>
              <path
                d="M71.1939 12.1777H67.14L66.9203 13.7483H69.2475V25.3884L73.5958 23.1878V21.2602L71.1939 22.476V12.1777Z"
                fill="#333333"
              ></path>
              <path
                d="M83.6545 8.27813C83.6545 8.1485 83.629 8.02015 83.5793 7.90039C83.5296 7.78062 83.4568 7.6718 83.3651 7.58014C83.2733 7.48848 83.1643 7.41576 83.0444 7.36615C82.9245 7.31654 82.796 7.29102 82.6662 7.29102H72.6869L72.9533 8.86154H81.3484C81.4442 8.86338 81.5355 8.90287 81.6024 8.97144C81.6693 9.04002 81.7065 9.13217 81.7059 9.22792V14.1519H77.7852V10.2127L75.8389 9.88367V14.1519H72.9696V15.7224H75.8319V25.3603H77.7782V15.7224H81.6989V25.3603H85.185L85.449 23.7897H83.6475L83.6545 8.27813Z"
                fill="#333333"
              ></path>
              <path
                d="M62.6095 16.887V16.7563C63.0762 17.0788 63.5686 17.3629 64.0815 17.6057L64.9016 15.8905C63.8864 15.4166 62.9809 14.7372 62.2426 13.8952H64.6679V12.3224H59.3126C59.4609 11.9563 59.5888 11.5824 59.6958 11.2022H64.6679V9.62938H63.0955C63.5885 8.55825 64.0885 7.08806 64.0885 7.08806H61.9576C61.6843 7.9559 61.3541 8.80485 60.9692 9.62938H60.0346C60.1096 9.0881 60.1471 8.54229 60.1468 7.99584V6.72168H58.2448V7.99584C58.2443 8.54304 58.1997 9.08931 58.1117 9.62938H57.4621L56.4574 7.08806H54.3265L55.3312 9.62938H53.747V11.2022H57.7191C57.5851 11.5864 57.4243 11.9607 57.2378 12.3224H53.7354V13.8952H56.1607C55.4224 14.7372 54.5169 15.4166 53.5017 15.8905L54.3195 17.6057C54.7911 17.3845 55.2457 17.1287 55.6793 16.8403L55.649 16.887H60.6702V18.7935H57.4201L57.4855 17.9231L55.5368 17.5567L55.3546 20.3571H62.6328L62.4436 23.7805H59.787L60.0533 25.351H64.3034L64.6095 19.8647C64.6172 19.7257 64.5963 19.5866 64.5484 19.4559C64.5004 19.3253 64.4263 19.2057 64.3305 19.1046C64.2347 19.0035 64.1193 18.9229 63.9913 18.8679C63.8634 18.8128 63.7255 18.7843 63.5861 18.7842H62.6071V16.887H62.6095ZM59.8851 13.8952C60.2325 14.4561 60.6365 14.98 61.0907 15.4588H57.3149C57.7691 14.98 58.1731 14.4561 58.5206 13.8952H59.8851Z"
                fill="#333333"
              ></path>
              <path
                d="M97.6338 6.73535H95.5029L96.0964 8.42489H88.5565V15.8925C88.5565 22.0649 87.6896 24.9166 87.5447 25.3507H89.6476C89.9911 24.0509 90.5822 21.0685 90.5822 15.8925V10.1798H105.174V8.42489H98.2273L97.6338 6.73535Z"
                fill="#333333"
              ></path>
              <path
                d="M61.4481 21.3281H53.9199L54.1745 22.8263H61.378L61.4481 21.3281Z"
                fill="#333333"
              ></path>
              <path
                d="M121.695 17.795H108.405V25.3606H122.684V18.6677C122.656 18.426 122.54 18.2031 122.357 18.0419C122.175 17.8808 121.939 17.7928 121.695 17.795ZM110.354 23.7714V19.3935H120.452C120.528 19.3959 120.601 19.4276 120.654 19.482C120.707 19.5364 120.737 19.6092 120.737 19.6852V23.7714H110.354Z"
                fill="#333333"
              ></path>
              <path
                d="M116.592 14.2916V10.5578H123.308V8.98497H116.592V6.73535H114.644V8.99196H110.204C110.382 8.07485 110.464 7.39344 110.489 7.16241H108.62C108.378 9.08622 107.881 10.9695 107.144 12.7631H109.158C109.431 12.0413 109.665 11.3051 109.859 10.5578H114.646V14.2916H106.849V15.8622H124.242V14.2916H116.592Z"
                fill="#333333"
              ></path>
              <path
                d="M202.52 14.2415L202.519 14.2411L202.173 15.3391H187.681C189.791 12.9566 192.18 9.1437 193.741 6.71973H196.467C194.813 9.22657 193.096 12.2486 191.96 13.5331H201.97L201.842 13.363C200.902 12.1094 199.903 10.7454 199.047 9.49673H201.514C202.428 10.7274 203.602 12.1981 204.741 13.6263C205.405 14.4581 206.057 15.2755 206.64 16.0228H203.796C203.4 15.4428 202.96 14.8421 202.52 14.2415Z"
                fill="#333333"
              ></path>
              <path
                d="M148.081 6.74045C148.756 8.10782 149.642 9.64093 150.682 11.3812H148.212C147.963 10.8745 147.709 10.3701 147.452 9.85918C146.953 8.86625 146.441 7.84841 145.925 6.74045H148.081Z"
                fill="#333333"
              ></path>
              <path
                d="M164.323 13.9709V15.7319H161.187L161.104 20.4763H164.764L164.391 22.2787H159.059L159.179 15.7319H157.012C156.952 17.8244 156.262 20.0412 154.84 22.113H152.133C154.148 19.6476 154.903 17.7416 154.933 15.7319H151.778L151.778 13.9709H157.267V11.2983H154.495C153.91 12.1892 153.077 12.9558 151.917 13.4737L152.007 11.1997C152.966 10.4332 153.659 8.77079 153.72 7.42413H155.683C155.657 8.12854 155.527 8.83294 155.313 9.53734H157.267V6.74045H159.32V9.53734H163.571V11.2983H159.32V13.9709H164.323Z"
                fill="#333333"
              ></path>
              <path
                d="M150.503 20.3811C150.388 20.7179 150.269 21.0674 150.132 21.4086C152.562 23.066 156.23 23.5026 159.618 23.5026H165.013L164.621 25.3864H159.31C155.755 25.3864 152.562 24.9927 149.457 23.1489C149.112 23.9569 148.781 24.7234 148.456 25.3864H145.973C147.195 23.3768 148.151 21.1185 148.695 19.1918C148.728 18.0938 148.702 16.7264 148.636 15.6698C148.622 15.4212 148.568 15.3383 148.317 15.3383H146.053V13.598H149.404C150.219 13.598 150.506 13.8466 150.557 14.6546C150.655 16.0841 150.705 18.2181 150.701 19.8133C150.634 19.9956 150.569 20.1863 150.503 20.3811Z"
                fill="#333333"
              ></path>
              <path
                fillRule="evenodd"
                clipRule="evenodd"
                d="M143.092 7.5719V9.2363H131.768L131.329 12.2928H139.279C140.387 12.2928 140.768 12.7693 140.687 13.8259C140.466 16.7261 140.113 19.5965 139.704 23.5197H143.74V25.2931H125.253L125.253 23.5197H137.662C137.829 22.3341 137.955 21.1234 138.11 19.936H127.994C128.676 16.3311 129.323 12.8412 129.817 9.2363H125.484L125.484 7.5719H143.092ZM138.693 14.6132C138.721 14.2195 138.62 14.0952 138.327 14.0952H131.04C130.821 15.504 130.59 16.6976 130.329 18.1064H138.327C138.508 16.7183 138.607 15.6283 138.693 14.6132Z"
                fill="#333333"
              ></path>
              <path
                d="M184.445 7.36199H168.321V9.10228H175.093V16.4985H167.375V18.2388H175.093V25.3864H177.24V18.2388H185.422V16.4985H177.24V9.10228H184.445V7.36199Z"
                fill="#333333"
              ></path>
              <path
                d="M171.258 10.2003H169.02C169.83 12.2306 170.578 13.9709 171.243 15.4212H173.669C172.558 13.1837 171.768 11.4434 171.258 10.2003Z"
                fill="#333333"
              ></path>
              <path
                d="M181.326 15.4419C182.011 13.7845 182.539 12.0442 182.992 10.221H180.755C180.34 12.0235 179.708 13.7638 178.837 15.4419H181.326Z"
                fill="#333333"
              ></path>
              <path
                d="M202.943 17.7334H189.653V25.299H203.932V18.6062C203.904 18.3645 203.788 18.1416 203.605 17.9804C203.423 17.8193 203.187 17.7313 202.943 17.7334ZM191.602 23.7098V19.332H201.7C201.776 19.3344 201.849 19.3661 201.902 19.4205C201.955 19.4749 201.985 19.5477 201.985 19.6237V23.7098H191.602Z"
                fill="#333333"
              ></path>
            </svg>
            <Popover
              visible={visible}
              arrowed={false}
              placement="bottomLeft"
              shift={false}
              flip={false}
              autoPlacements={[]}
              popupStyle={{
                maxWidth: "initial",
                padding: "12px 0",
                transform: `translateX(${
                  lastValidHoverIndex === 0 ? -18 : 78
                }px)`,
              }}
              popup={
                <div
                  className="relative transition-all duration-200 overflow-hidden"
                  style={{
                    width:
                      lastValidHoverIndex !== undefined
                        ? menus[lastValidHoverIndex].width
                        : 0,
                    height:
                      lastValidHoverIndex !== undefined
                        ? menus[lastValidHoverIndex].height
                        : 0,
                  }}
                  ref={popupRef}
                  onMouseEnter={() => {
                    clearTimeout(hoverTimer.current)
                  }}
                  onMouseLeave={handleMouseLeave}
                >
                  {menus.map((menu, index) => (
                    <div
                      key={index}
                      className={`absolute top-0 left-0 transition-all duration-200 ${
                        lastValidHoverIndex === index
                          ? "opacity-100"
                          : "opacity-0"
                      }`}
                      style={{
                        width: menu.width,
                        height: menu.height,
                      }}
                    >
                      {menu.list.map((list) => (
                        <HoverFill
                          key={list.label}
                          hoverColor="rgba(41, 107, 239, 0.05)"
                        >
                          <div className="flex items-center h-[54px] pl-3 text-[15px]">
                            {list.icon}
                            {list.label}
                          </div>
                        </HoverFill>
                      ))}
                    </div>
                  ))}
                </div>
              }
            >
              <div className="flex items-center">
                {menus.map((menu, index) => (
                  <HoverFill key={index} hoverColor="rgba(41, 107, 239, 0.05)">
                    <div
                      className="group flex items-center justify-cente…r gap-1 px-4 h-16 text-[15px] transition-all duration-200 text-neutral-900 hover:text-neutral-900"
                      onMouseEnter={() => {
                        handleMouseEnter(index)
                      }}
                      onMouseLeave={handleMouseLeave}
                    >
                      {menu.label}
                    </div>
                  </HoverFill>
                ))}
              </div>
            </Popover>
          </div>
        </div>
      </DemoBox>
    </div>
  )
}

export default Basics
